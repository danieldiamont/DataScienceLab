Supplementary Material

A

Proof of Theorem 1

First, consider any real vector s ∈ Rd and denote its radius and corresponding unit vector by r := ksk and
u := s/ksk. Then it is well-known that an integral of a density function f (s) over Rd satisfies
Z
Z ∞Z
f (ru)rd−1 drdu,
(1)
f (s) ds =
Rd

0

U d−1

where the integral about u is over the unit hypersphere U d−1 := {u ∈ Rd | kuk = 1}. Notice that rd−1 drdu
is the infinitesimal volume element at s = ru, which depends on the radius r. The factor rd−1 came from
the fact that the surface area of hypersphere of radius r equals 2π d/2 rd−1 /Γ(d/2).
By generalizing this fact to our setting which involves multiple vectors s[j] , we can readily obtain
Y
Y
ps ({s[j] })
ds[j] = p({rj }, {u[j] })
drj duj ,
(2)
j

j

where the pdf in the right-hand side is given by
p({rj }, {u[j] }) = ps ({rj u[j] })

Y

d −1

rj j

.

(3)

j

Now denote by αd := 2π d/2 /Γ(d/2) the surface area of unit hypersphere U d−1 , where Γ denote the Gamma
function, and let pr (·) be the joint pdf of the m radius variables
rj . Then, by the assumption of independence
Q
and uniformity, the left-hand side of (3) reads pr ({rj }) j αd−1
. Combining this with (3) and substituting
j
rj = ks[j] k and uj = s[j] /ks[j] k, we obtain
Y
ps ({s[j] }) = pr ({ks[j] k})
αd−1
ks[j] k1−dj .
(4)
j
j

Finally, using the relation pr ({rj }) = pq ({rj2 })

Q

j (2rj ),

ps ({s[j] }) = pq ({ks[j] k2 })

Y

we obtain the formula for the real-valued case:
ks[j] k2−dj Γ(dj /2)π −dj /2 .

(5)

j

For complex vector s, the isomorphism between Cd and R2d implies that we only need to replace every dj in
the real-valued case with 2dj , which straightforwardly gives the desirable result.

B

Adaptive Subspace Partitioning

First, observe that
kΩ − ZT ΓZk2 = −2tr[ΓT ZΩZT ] + tr[DΓT DΓ] + const.,

(6)

where D := diag(d1 , d2 , . . . , dm ) = ZZT . As readily seen, Γ = D−1 ZΩZT D−1 minimizes (6) for any given Z.
Substituting this, we eventually obtain −kD−1/2 ZΩZT D−1/2 k2 + const. to be minimized with respect to Z.
e Z
e T k with respect to Z
e := D−1/2 Z, as desired.
This is equivalent that we maximize kZΩ
1

C

Details of EEG analysis

The EEG data were measured during the subjects were performing two-class cued motor imagery task (Blankertz
et al., 2007). The two classes were possibly different for each subject, selected out of left hand, right hand
or foot. The data were already downsampled at 100Hz. As a common preprocessing, we first re-referenced
all the sensor channels to the common average and slightly reduced the number of channels from 59 to 41
to reduce computation (see below for channel names and layout). Then we applied standard Morlet wavelet
filter in each channel to convert the data into complex time-frequency domain, with the center frequencies
at every 0.5Hz in the range of 8-30Hz and at the reduced sampling rate of 10Hz. Finally, we vectorized the
spectra (45 discrete frequencies) and concatenated them in all the 41 channels, resulting in 1845-dimensional
complex data vectors xt .

AF3

AF4

F5 F3 F1 Fz F2 F4 F6
FC5 FC3 FC1 FCz FC2 FC4 FC6
T7

C5

C3 C1

Cz

C2 C4

C6

T8

CP5 CP3 CP1 CPz CP2 CP4 CP6
P5 P3 P1 Pz P2 P4 P6

O1

O2

Figure S1: Layout of 41 EEG channels
The database provided two types of data, namely, the “calibration” and “evaluation” datasets, originally
used for training and testing the classifiers, respectively. In our analysis, we used only the “calibration” data
for unsupervised learning. The “calibration” data contained 200 trial epochs (the half for one class). To
avoid transient or cue-related effects, we extracted only the last 2s (out of the duration of 4s) of each trial
epoch. Thus, we eventually obtained the dataset {xt } of sample size 4000 (i.e., 20 time points per trial), for
which we trained the model by each of the three methods: EBM-NCE, SPLICE-LW and SPLICE-ML.
After learning, every second-layer components s0k was averaged within each trial, and then regarded as a
discriminant score for the two classes. Note that the sign of each discriminant score was actually arbitrary
due to the indeterminacy of sign in ICA. Thus, we computed the AUC score by first computing the two
scores by flipping the sign and taking the greater one (Fig. 4).
To investigate the generalization ability of the model, we further evaluated the same AUC scores by
transferring the model to the other “evaluation” data. In this EEG data, the duration of task trials are
irregular (1.5-8s). Instead of averaging the second-layer components s0k within each trial of varying length,
we thus computed the average value within each of the sliding time windows of 2s. The window was sampled
only within the task periods except for the initial 1s after the cue. Thus, every time point except for the
initial 1s in each trial was given a single discriminant score per second-layer component. The AUC scores
were then computed for every component.

References
Blankertz, B., Dornhege, G., Krauledat, M., Müller, K.-R., and Curio, G. The non-invasive Berlin braincomputer interface: Fast acquisition of effective performance in untrained subjects. NeuroImage, 37(2):
539–550, 2007.

2

