Online One-Class Collaborative Filtering

880
881
882
883
884
885
886
887
888
889
890
891
892
893
894
895
896
897
898
899
900
901
902
903
904
905
906
907
908
909
910
911
912
913
914
915
916
917
918
919
920
921
922
923
924
925
926
927
928
929
930
931
932
933
934

Supplementary Material for “The Sample Complexity of Online One-Class Collaborative
Filtering”
6. Proof of Theorem 1
Theorem 1 follows immediately from the following result.
N
Theorem 2 Suppose that there are at least 2K
users of the same type, for all user types, and assume that at least a
fraction ⌫ of all items is likable to a given user, for all users. Moreover, suppose that for some 2 [0, 1), all users satisfy
condition (1). Pick > 0 and suppose that the number of nearest neighbors k, the batch size Q, and the parameter ⌘, are
9N
chosen such that k  40K
, ⌘  ⌫/2,

k
Q

64 log(8M/ )
,
pf 2

(7)

10
log(4/ ).
⌫

(8)

and
Q

Then the reward accumulated by the User-CF algorithm up to time T 2 [Tstart , 45 ⌫M pf ] with
Tstart
satisfies
E [reward(T )]
NT

✓

⇣

⇣ ⇣
⌘
⌘⌘ 1 1 ↵
Q
88
512 max log 4N
,
log
k
⇣
⇣
⌘⌘
=
1
2
2
(3pf (1
)2 ⌫) 1 ↵ 1 max T1 , ⌘Q

1

Tstart
T

↵ (T

2

Tstart )1
T (1 ↵)

↵

max

✓

1 2
,
T ⌘Q

◆◆

(1

).

(9)

Theorem 1 follows by choosing the parameter of the User-CF algorithm as follows:
⌘=

⌫
,
2

k=

9 N
,
40 K

and Q = k

pf 2
.
64 log(8M/ )

To see this, note that by definition, the conditions
(7) on Q are satisfied. By (4), condition (8)
⇣ on⇣ k and⌘ ⌘ and condition
⌘
0
4N Q
2
K c log(M/ )
88
holds and ⌘Q = N pf 2 . Moreover, max log k
, log
 c̃ log(N/ ).
6.1. Proof of Theorem 2

Theorem 2 is proven by showing that at time t

Tstart the following holds for all users u:

i) the neighborhood of u is sufficiently well explored by similarity exploration steps so that most of the nearest neighbors
of u are good, i.e., are of the same user type as u (similarly, neighbors are called bad if they are of a different user
type than u),
ii) for t
and

t
Tstart , the estimates p̂ui , for all i 2 Qq , q = 0, . . . , ⌘Q

t
iii) there exist items in the sets Qq , q = 0, . . . , ⌘Q
times steps.

1 correctly predict whether i is likable by u or not,

1 that are likable by u and that have not been rated by u at previous

Conditions i, ii, and iii guarantee that an exploitation step recommends a likable item.
Formally, we start by defining the following events:
G (t) = {At time t, no more than k of the k-nearest neighbors of u are bad},

(10)

935
936
937
938
939
940
941
942
943
944
945
946
947
948
949
950
951
952
953
954
955
956
957
958
959
960
961
962
963
964
965
966
967
968
969
970
971
972
973
974
975
976
977
978
979
980
981
982
983
984
985
986
987
988
989

Online One-Class Collaborative Filtering

990
991
992
993
994
995
996
997
998
999
1000
1001
1002
1003
1004
1005
1006
1007
1008
1009
1010
1011
1012
1013
1014
1015
1016
1017
1018
1019
1020
1021
1022
1023
1024
1025
1026
1027
1028
1029
1030
1031
1032
1033
1034
1035
1036
1037
1038
1039
1040
1041
1042
1043
1044

L(t) ={at time t, there exists an item i 2 Qq ,

1 that is likable by u},

q = 0, . . . , t/(⌘Q)

(11)

and
E(t) =

[

t
q=0,..., ⌘Q

1

(12)

Eq (t),

with
Eq (t) ={Conditioned on G

4Q

(t), for all i 2 Qq ,

p̂ui > pf /2, if pui > 1/2 +

, and

p̂ui < pf /2, if pui < 1/2

}.

(13)

For convenience, we omit in the notion of L(t), G (t), E(t), and Eq (t) the dependence on u. The significance of those
definitions is that if L(t), G (t), and E(t) hold simultaneously, then the recommendation made to user u by an exploitation
4Q
step at time t is likable. We can therefore lower-bound the reward E [reward(T )] as follows:
T 1N 1
⇤
E [reward(T )]
1 XX ⇥
=
P Xui(u,t) = 1
NT
N T t=0 u=0
N 1
1 X
N T u=0
N 1
1 X
N u=0
N 1
1 X
N u=0

(1

T
X1

t=0,t2{⌘Qq
/
: q=0,1,...}
T 1
1 X
(1
T t=0

⇥
⇤
P [exploitation at t] P Xui(u,t) = 1|exploitation at t
⇥

↵

(2/t) )P Xui(u,t) = 1|exploitation at t

T 1
1 X
(1
T

)(1

(2/t) )

t=Tstart

✓
) 1

Tstart
T

2↵

(T

Here, (14) follows from
⇥
⇤
P Xui(u,t) = 1|preference exploration at t

Tstart )1
T (1 ↵)

(t

✓

1 2
,
T ⌘Q

bt/(⌘Q)c)

↵

1

(t(1

1/(⌘Q)))

◆!

(15)
(16)
(17)

⇥
⇤
and P Xui(u,t) = 1|similarity exploration at t

0

For (15) we used, for t 6= ⌘Qq,

P [exploration at t] = 1

↵

max

◆!
1 2
max
,
T ⌘Q
◆◆
✓
1 2
max
,
.
T ⌘Q
✓

↵

⇤

(14)

↵

1

0.

(2/t)↵

which follows from ⌘Q 2. Moreover we used for (15) that the fraction of preference exploration steps up to time T is at
2
). To see that, note that at T 2 {⌘Qq, . . . , ⌘Q(q + 1)} we have performed q + 1 preference exploration
most max( T1 , ⌘Q
q+1
2
steps. It follows that, for q
1, the fraction of preference exploration steps performed up to T is given by q⌘Q
 ⌘Q
.
1
2
Thus, for any T 1, the fraction of preference exploration steps is  max( T , ⌘Q ). Equality (16) follows from
h
i
⇥
⇤
P Xui(u,t) = 1|exploitation at t
P E(t) \ G (t) \ L(t)
4Q

1

Here, inequality (18) holds for t
T
X1

t=Tstart

(18)

.

Tstart and is established below. Finally, inequality (17) follows from
t

↵


=

Z

T

1

t

↵

1)1

↵

Tstart 1

(T

=

1
1

↵

(Tstart
1 ↵

t1

↵ T 1
|t=Tstart 1

1)1

↵



(T

Tstart )1
1 ↵

↵

.

1045
1046
1047
1048
1049
1050
1051
1052
1053
1054
1055
1056
1057
1058
1059
1060
1061
1062
1063
1064
1065
1066
1067
1068
1069
1070
1071
1072
1073
1074
1075
1076
1077
1078
1079
1080
1081
1082
1083
1084
1085
1086
1087
1088
1089
1090
1091
1092
1093
1094
1095
1096
1097
1098
1099

Online One-Class Collaborative Filtering

1100
1101
1102
1103
1104
1105
1106
1107
1108
1109
1110
1111
1112
1113
1114
1115
1116
1117
1118
1119
1120
1121
1122
1123
1124
1125
1126
1127
1128
1129
1130
1131
1132
1133
1134
1135
1136
1137
1138
1139
1140
1141
1142
1143
1144
1145
1146
1147
1148
1149
1150
1151
1152
1153
1154

It remains to establish (18). To this end, define for notational convenience
⇣ ⇣
⌘
Q
256 max log 4N
, log
k
A :=
2
3pf (1
)2 ⌫

88

⌘

,

and let Ts be the number of similarity exploration steps executed up to time T . Inequality (18) follows by noting that, for
all t Tstart , by the union bound,
h
i
h
i
c
P (E(t) \ G (t) \ L(t))  P [E c (t)] + P G c (t) + P [Lc (t)]
4Q
4Q
h
i
 P [E c (t)] + P G c (t)|Ts A + P [Ts  A] + P [Lc (t)]
(19)
4Q

(20)



+ + + = .
4 4 4 4
Here, inequality (19) follows since for two events C, B we have that

P [C] = P [C \ B] + P [C \ B c ] = P [C|B] P [B] + P [C|B c ] P [B c ]  P [C|B] + P [B c ] .

(21)

Inequality (20) follows from

h

P Gc

4Q

P [E c (t)]  /4
i
(t)|Ts A  /4

(22)

P [Lc (t)]  /4.

(25)

(23)
(24)

P [Ts  A]  /4

In the remainder of this proof, we establish the inequalities (22)-(25). The key ingredient for these bounds are concentration
inequalities, in particular a version of Bernstein’s inequality (Bardenet and Maillard, 2015).
Proof of (22): By the union bound, we have, for all t = 0, . . . , M
M/Q 1

X

P [E c (t)] 

q=0

1, that

⇥
⇤
P Eqc (t) 

4

⇥
⇤
Q
as desired. Here, we used P Eqc (t)  4M
, which follows from Lemma 1 stated below with
that the assumption (26) of Lemma 1 is implied by the assumption (7) of Theorem 2).

0

=

Q
4M

and Tr = 1 (note

Lemma 1 (Preference exploration) Suppose we recommend Tr random items to each user, chosen uniformly at random
from a set Q ✓ [M ] of Q items. Suppose that pvi is -bounded away from 1/2, for all i 2 Q and for all v 2 Nu , where
Tr
Nu is a set of k users, of which no more than k, with  4Q
, of the users are of a different type than u. Fix 0 > 0. If
Tr
then, with probability at least 1
Proof of (23):
neighbors.

0

k
pf 2
Q 64 log(2Q/ 0 )

, for all i 2 Q, p̂ui >

pf
2

if pui

(26)

1
1/2 +

and p̂ui <

pf
2

if pui  1/2

.

Inequality (23) follows from Lemma 2 below, which ensures that a user has many good and only few bad

Lemma 2 (Many good and few bad neighbors) Let Tu be the subsets of all users [N ] that are of the same type of u and
N
suppose its cardinality satisfies 2K
. Suppose that, for some constant 2 [0, 1), condition (1) holds, and that the number
9N
of nearest neighbors k satisfies k  40K
. Choose 2 (0, 1), and suppose
Ts

3p2f (1

64 log(N/( k))
1
)2 M
minv2Tu hpu , pv i

(27)
3

2

2 1

similarity exploration steps have been performed. Then, with probability at least 1 11e 64 Ts pf (1 ) M minv2Tu hpu ,pv i ,
the set of nearest neighbors Nu of user u (defined in Section 3), contains no more than k bad neighbors.

1155
1156
1157
1158
1159
1160
1161
1162
1163
1164
1165
1166
1167
1168
1169
1170
1171
1172
1173
1174
1175
1176
1177
1178
1179
1180
1181
1182
1183
1184
1185
1186
1187
1188
1189
1190
1191
1192
1193
1194
1195
1196
1197
1198
1199
1200
1201
1202
1203
1204
1205
1206
1207
1208
1209

Online One-Class Collaborative Filtering

1210
1211
1212
1213
1214
1215
1216
1217
1218
1219
1220
1221
1222
1223
1224
1225
1226
1227
1228
1229
1230
1231
1232
1233
1234
1235
1236
1237
1238
1239
1240
1241
1242
1243
1244
1245
1246
1247
1248
1249
1250
1251
1252
1253
1254
1255
1256
1257
1258
1259
1260
1261
1262
1263
1264

To see that inequality (23) follows from Lemma 2, we first note that Ts A guarantees that condition (27) of Lemma 2 is
satisfied (with = 4Q ). To see this, note that since each user likes at least a fraction ⌫ of the items, we have
1
min hpu , pv i
M v2Tu
Lemma 2 therefore implies
h
P G c (t)|Ts
4Q

i
A  11e

⌫

2
3
64 Ts pf (1

✓

◆2

1
+
2

⌫
.
4

1
)2 M
minv2Tu hpu ,pv i

as desired. For the second inequality above we used (28) and Ts

(28)

 11e

log(88/ )

=

8

,

A.

Proof of (24): We next establish the inequality P [Ts  A]  /4. To this end, recall that a similarity exploration step
is carried out at t = 0, . . . , T 1, t 6= ⌘Qq, q = 0, 1, . . . with probability 1/(t bt/(⌘Q)c). Recall from the discussion
2
below inequality (17), that the fraction of time steps up to time T for which t = ⌘Qq, for some q, is at most max( T1 , ⌘Q
).
It follows that the number of similarity exploration steps, Ts , carried out after t
Tstart steps of the User-CF algorithm,
PT̃
2
stochastically dominates the random variable S = t=1 Zt , T̃ = Tstart (1 max( T1 , ⌘Q
)), where Zt is a binary random
↵
variable with P [Zt = 1] = 1/t . It follows that
h
i
T̃ 1 ↵
P [Ts  A] = P Ts  T̃ 1 ↵ /2  e 20  /4,
(29)
where the first inequality holds by definition of Tstart , i.e.,
Tstart = (2A) 1

1
↵

✓
/ 1

max

✓

1 2
,
T ⌘Q

◆◆

,

and the second inequality holds by Lemma 3 stated below. Finally, the last inequality in (29) follows from
T̃ = (2A) 1

128
log(44/ ).
3

1
↵

The following lemma appears in (Bresler et al., 2014).
Lemma 3 Let S =

PT̃

t=1

Zt where Zt is a binary random variable with P [Zt = 1] = 1/t↵ , ↵ 2 (0, 4/7). We have that
h
i
T̃ 1 ↵
P ST  T̃ 1 ↵ /2  e 20 .

Proof of (25): Suppose t < ⌘Q, consider user u, and let N0 be the total number of items likable by u in the set Q0 (recall
that Q0 is choosen uniformly at random from the subset of items [M ] of cardinality Q). Note that N0 > ⌘Q implies that
at t < ⌘Q, there exist items that are likable by u in Q0 that have not been recommended to u yet. Therefore, we can upper
bound the probability that no likable items are left to recommend, for t < ⌘Q, by
P [Lc (t)]  P [N0  ⌘Q]  P [N0  Q⌫/2]  P [N0  E [N0 ]
e

Q

(⌫/2)2

2⌫(1

⌫)+ 2 ⌫
3 2

=e

Q

2(1

⌫/4
⌫)+ 1
3

e

(30)

Q⌫/2]
⌫
Q 10



4

.

(31)

Here, the first inequality in (30) follows from ⌘  ⌫/2, by assumption; the second inequality in (30) follows from E [N0 ]
⌫Q (since at least a fraction of ⌫ of the items is likable by u), the first inequality in (31) follows from Bernstein’s inequality
(Bardenet and Maillard, 2015), and finally the last inequality in (30) holds by assumption (8). We have established that
P [Lc (t)]  /4, for t < ⌘Q. Using the exact same line of arguments yields the same bound for t 2 [⌘Q, ⌘M ].

It remains to upper bound P [Lc (t)] for t 2 [⌘M, 45 ⌫M pf ]. To this end, let Nuc (T ) be the number of (likable) items that
have been rated by user u after T time steps, and note that if Nuc (T ) is strictly smaller than the (minimum) number of
likable items, then there are likable items left to recommend. Formally,
P [Lc (t)]  P [Nuc (T )

⌫M ]

(32)

1265
1266
1267
1268
1269
1270
1271
1272
1273
1274
1275
1276
1277
1278
1279
1280
1281
1282
1283
1284
1285
1286
1287
1288
1289
1290
1291
1292
1293
1294
1295
1296
1297
1298
1299
1300
1301
1302
1303
1304
1305
1306
1307
1308
1309
1310
1311
1312
1313
1314
1315
1316
1317
1318
1319

Online One-Class Collaborative Filtering

1320
1321
1322
1323
1324
1325
1326
1327
1328
1329
1330
1331
1332
1333
1334
1335
1336
1337
1338
1339
1340
1341
1342
1343
1344
1345
1346
1347
1348
1349
1350
1351
1352
1353
1354
1355
1356
1357
1358
1359
1360
1361
1362
1363
1364
1365
1366
1367
1368
1369
1370
1371
1372
1373
1374

where we used that for each user u, at least ⌫M items are likable. Recall that with probability pui pf  pf a likable item i
is rated if it is recommended to u. Once rated, an item is not recommended again.
Note that Nuc (T ) is statistically dominated by a sum of independent binary random variables Zt with P [Zt = 1] = pf . We
therefore have that
h
T p2
Tstart p2
pf i
f
f
2
P [Nuc (T ) ⌫M ]  P Nuc (T ) T (pf + )  e 2  e
 .
(33)
4
4

Here, the first inequality holds by the assumption T  45 ⌫M pf , the second inequality follows by Hoeffding’s inequality, the
2
third inequality follows by T
Tstart , and the last inequality follows from Tstart
log(4/ ), which holds by definition
p2f
c
of Tstart . Application of (33) on (32) concludes the proof of P [L (t)]  /4.
6.2. Proof of Lemma 2
M
Recall that rsim
is the vector containing the responses Rui of user u to previous similarity exploitation steps up to
u 2 {0, 1}
time t, and that we assume in Lemma 2, that Ts similarity exploration steps have been performed up to time
establish
⌦ t. Tosim
↵
Lemma 2, we show that there are more than k users v that are of the same user type as u and satisfy T1s rsim
,
r
✓,
u
v
⌦ sim sim ↵
1
and at the same time, there are fewer than k users of a different user type as u that satisfy Ts ru , rv
✓ for a certain
threshold ✓ chosen below. This is accomplished by the following two lemmas.
N
Lemma 4 (Many good neighbors) Suppose there are at least 2K
users of the type as user u (including u), and suppose
that Ts similarity exploration steps have been performed. Then, with probability at least 1 10pgood ,

pgood := e
at least

9N
40K

3
16 Ts pg (1

users v of the same user type as u obey

✓/pg )2

1
Ts

⌦

pg := p2f

,

sim
rsim
u , rv

↵

1
min hpu , pv i ,
M v2Tu

✓.

Lemma 5 (Few bad neighbors) Suppose that Ts similarity exploration steps have been performed. Then, with probability
at least 1 pbad , where
Ts pb (✓/pb 1)2 /4
1
pbad = e 1+(✓/pb 1)/3 , pb := p2f max
hpv , pu i ,
v 2T
/ u M
⌦
↵
sim
at most N pbad users v of a different user type than u obey T1s rsim
✓.
u , rv
We set

pg + pb
.
2
9N
With this choice, by⌦Lemma 4,↵ there are more than 40K
k (the inequality holds by assumption) users v of the same type
1
sim sim
as u that satisfy Ts ru , rv
✓, with probability at least 1 10pgood . By Lemma 5, there are no more than N pbad
⌦
↵
sim
users v of a different type as u with T1s rsim
✓. Thus, by the union bound, Nu contains less than pbad N bad
u , rv
neighbors with probability at least
✓=

1

10pgood

Here, we used
pgood = e

pbad

3
64 Ts pg (1

1

3
64 Ts pg (1

11e

pb /pg )2

e

where the inequality follows by pb /pg  , by (1). Moreover, we used
pbad = e
e

Ts pb (✓/pb 1)2 /4
1+(✓/pb 1)/3

p

Ts pg ( 1/
1+(1/

p
1)

=e

)2 /16

=e

Ts pb (pg /pb
1+(pg /pb
Ts pg (1

1)2 /16
1)/6

)2 /16

.

Ts p g (

=e

p

3
64 Ts pg (1

)2

.

)2

p

pg /pb
pb /pg )2 /16
1+(pg /pb 1)/6

e

p

Ts pg ( 1/
1+(1/

p 2
) /16
1)/6

(34)

Here, the first inequality follows from the absolute value of the exponent being decreasing in pb /pg , and from the assumption pb /pg  , by (1).

To conclude the proof, we needed to establish that the maximum number of bad neighbors N pbad satisfies N pbad  k.
This follows directly by noting that, by assumption (27), the RHS of (34) is upper-bounded by Nk .

1375
1376
1377
1378
1379
1380
1381
1382
1383
1384
1385
1386
1387
1388
1389
1390
1391
1392
1393
1394
1395
1396
1397
1398
1399
1400
1401
1402
1403
1404
1405
1406
1407
1408
1409
1410
1411
1412
1413
1414
1415
1416
1417
1418
1419
1420
1421
1422
1423
1424
1425
1426
1427
1428
1429

Online One-Class Collaborative Filtering

1430
1431
1432
1433
1434
1435
1436
1437
1438
1439
1440
1441
1442
1443
1444
1445
1446
1447
1448
1449
1450
1451
1452
1453
1454
1455
1456
1457
1458
1459
1460
1461
1462
1463
1464
1465
1466
1467
1468
1469
1470
1471
1472
1473
1474
1475
1476
1477
1478
1479
1480
1481
1482
1483
1484

6.2.1. P ROOF OF L EMMA 4
Consider u and assume there are exactly
users from the same user type. There could be more, but it is sufficient to
⌦
↵
N
sim
consider 2K . Let v be of the same user type. We start by showing that T1s rsim
✓ with high probability. To
u , rv
⌦ sim sim ↵
PTs 1
this end, note that ru , rv
= t=0
Ru⇡(t) Rv⇡(t) where ⇡ is the random permutation of the item space drawn by
the User-CF algorithm at initialization, and Ru⇡(t) Rv⇡(t) is a binary random variable, independent across t, with success
1
probability p2f pu⇡(t) pv⇡(t) . Setting a := p2f M
hpu , pv i, for notational convenience, it follows that


1 ⌦ sim sim ↵
1 ⌦ sim sim ↵
P
ru , rv  ✓ = P
r , rv  a (a ✓)
(35)
Ts
Ts u
N
2K

e
=e
e

Ts (a ✓)2 /2
a+(a ✓)/3
Ts a(1
1+(1

(36)

✓/a)2 /2
✓/a)/3

3
8 Ts pg (1

3
8 Ts a(1

e

✓/pg )

2

✓/a)2

(37)
(38)

 pgood .

Here, (36) follows from Bernstein’s inequality (Bardenet and Maillard, 2015), and for (38) we used that the RHS of (37) is
decreasing in a.
Next, consider the random variable
X

W =

Gv = 1

Gv ,

v2Tu

⇢

1 ⌦ sim sim ↵
r , rv
Ts u

✓ ,

where Tu is the subset of all users [N ] that are of the same time as user u, as before. By Chebyshev’s inequality,

E [W ]
Var(W )
P W E [W ] 

.
2
(E [W ] /2)2
Since there are at least

N
2K

users of the same type, the carnality of Tu is lower bounded by
✓
◆
N
E [W ] (1 pgood )
1 .
2K

Next, we upper bound the variance of W . We have
X
Var(W ) =
Var(Gv ) +
v2Tu

With Gv = G2v ,
Similarly,

⇥ ⇤
Var(Gv ) = E G2v

2

✓

◆
✓
N
1 pgood +
2K

N
2K

Cov(Gv , Gw ).

E [Gv ])  1

E [Gv ] E [Gw ]  1

Thus, we obtain

◆✓
N
1
2K

(1

E [Gv ]  pgood .
q)2  2pgood .

◆
✓
N
2 2pgood 
2K

Plugging this into (39) yields


P W

E [W ] 

E [W ]
8pgood

 10pgood ,
2
(1 pgood )2

for pgood  1/10. It follows that the number of good neighbors is larger than
W
with probability at least 1

10pgood .

E [W ] /2

(1

1. It follows with (38) that

v,w2Tu ,v6=w

E [Gv ] = E [Gv ] (1

Cov(Gv , Gw ) = E [Gv Gw ]

Var(W ) 

X

N
2K

pgood )

N
4K

9N
40K

(39)

◆2
1 2pgood .

1485
1486
1487
1488
1489
1490
1491
1492
1493
1494
1495
1496
1497
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1508
1509
1510
1511
1512
1513
1514
1515
1516
1517
1518
1519
1520
1521
1522
1523
1524
1525
1526
1527
1528
1529
1530
1531
1532
1533
1534
1535
1536
1537
1538
1539

Online One-Class Collaborative Filtering

1540
1541
1542
1543
1544
1545
1546
1547
1548
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1559
1560
1561
1562
1563
1564
1565
1566
1567
1568
1569
1570
1571
1572
1573
1574
1575
1576
1577
1578
1579
1580
1581
1582
1583
1584
1585
1586
1587
1588
1589
1590
1591
1592
1593
1594

6.2.2. P ROOF OF L EMMA 5
Let⌦u and v be
as in the
Lemma 4, we start by showing that
↵ two fixed users of different user types. Similarly
⌦ sim
↵ proof
PTof
s 1
1
sim sim
sim
r
,
r

✓
with
high
probability.
To
this
end,
note
that
r
,
r
=
u
v
u
v
t=0 Ru⇡(t) Rv⇡(t) where ⇡ is a random
Ts
permutation of the item space and Ru⇡(t) Rv⇡(t) is a binary random variable, independent across t, with success probability
1
hpu , pv i, for notational convenience, it follows that
p2f pu⇡(t) pv⇡(t) . Setting a = p2f M


1 ⌦ sim sim ↵
1 ⌦ sim sim ↵
P
ru , rv
✓ =P
r , rv 0
a + (✓ a)
Ts
Ts u
e
e

Ts (✓ a)2 /2
a+(✓ a)/3

(40)

Ts pb (✓/pb 1)2 /2
1+(✓/pb 1)/3

= p2bad .

(41)

Here, (40) follows from Bernstein’s inequality. Specifically, we use that ⇡ is a random permutation of the item space
as well as that Rui Rvi are binary random variables independent across i (note that Bernstein’s inequality also applies
to sampling without replacement, see e.g., (Bardenet and Maillard, 2015)). Finally, for inequality (41), we used that
1
a  pb = p2f maxv2T
/ u M hpv , pu i.
P
2
Set Nbad =
v 2T
/ u 1 {u and v are declared neighbors}. By inequality (41), we have E [Nbad ]  pbad N. Thus, by
Markov’s inequality,
E [Nbad ]
p2 N
P [Nbad N pbad ] 
 bad = pbad ,
N pbad
N pbad
which concludes the proof.
6.3. Proof of Lemma 1 (preference exploration)
Assume w.l.o.g. that pui > 1/2 + , for all i 2 Q. The case where some of the pui satisfy pui⇥ < 1/2 ⇤
is treated
analogously. To prove Lemma 1, we may further assume that pui = 12 + , for all i 2 Q, since P p̂ui > p2f is increasing
in pui .
Consider a fixed item i 2 Q, and let Nugood be the subset of Nu corresponding to users that are of the same type as u and
to which additionally an recommendation has been made by drawing Tr items uniformly from Q for each user u. Let Ng
⇥
⇤
be the cardinality of Nugood . In order to upper-bound P p̂ui  p2f , we first note that by (21),
h
h
i
pf i
pf
P p̂ui 
 P p̂ui 
Ng ng + P [Ng  ng ] .
(42)
2
2
Here, we defined
ng :=

Tr k
(1/2
Q

).

We next upper bound the probabilities on the RHS of (42). We start with the first probability on the RHS of (42):
"P
#
h
i
pf
pf
v2Nugood Rvi
0
0
P p̂ui 
N g = ng  P

N g = ng
2
n0g + k
2
2
3
X
n0g + k
1
p
f
= P4 0
Rvi 
Ng = n0g 5
ng
2
n0g
good
v2Nu
2
3
✓
◆
✓
◆
X
1
1
k
= P4 0
Rvi  pf
+
pf
Ng = n0g 5
ng
2
2n0g
good
v2Nu
2
3
✓
◆◆
✓
◆
X ✓
1
k
= P4
Rvi pf
+
 n0g pf
Ng = n0g 5
0
2
2n
g
good

(43)

(44)

v2Nu

e

n0g pf (
(1/2+ )+(

k/(2n0g ))2 /2
k/(2n0g ))/3

(45)

1595
1596
1597
1598
1599
1600
1601
1602
1603
1604
1605
1606
1607
1608
1609
1610
1611
1612
1613
1614
1615
1616
1617
1618
1619
1620
1621
1622
1623
1624
1625
1626
1627
1628
1629
1630
1631
1632
1633
1634
1635
1636
1637
1638
1639
1640
1641
1642
1643
1644
1645
1646
1647
1648
1649

Online One-Class Collaborative Filtering

1650
1651
1652
1653
1654
1655
1656
1657
1658
1659
1660
1661
1662
1663
1664
1665
1666
1667
1668
1669
1670
1671
1672
1673
1674
1675
1676
1677
1678
1679
1680
1681
1682
1683
1684
1685
1686
1687
1688
1689
1690
1691
1692
1693
1694
1695
1696
1697
1698
1699
1700
1701
1702
1703
1704

where (44) follows from the number of users nui in Nu that received recommendation i being upper bounded by Ng + k
(recall that k is the maximum number of bad neighbors in Nu ), and by assuming adversarially that all recommendations
given to bad neighbors did yield Rvi = 0. Finally, (45) follows from Bernstein’s inequality; to apply Bernstein’s inequality,
we used that E [Rvi ] = pf (1/2 + ), and that the variance of Rvi is upper bounded by pf (1/2 + ), for v 2 Nugood . Next,
note that by Bayes theorem,
P [p̂ui  1/2|Ng

ng ] =
=

P [{p̂ui  1/2} \ {Ng ng }]
P [Ng ng ]
⇥
⇤ ⇥
⇤
P
ng P Ng = n0g
n0g ng P p̂ui  1/2 Ng
P [Ng

e
e

(1/2+

ng ]

k/(2n0g ))2 /2
k/(2n0g ))/3

ng pf (
)+(

ng pf 2 /8
1/2+ + /6

e

ng pf
16

(46)
2

Tr kpf
Q64

e

2

(47)

.

Here, inequality (46) follows from inequality (45) and using that the RHS of inequality (45) is increasing in n0g . For
inequality (47) we used the definition of ng in (43), and that
k
=
ng
Here, the inequality (48) holds by 
recommend each item at most once).

Tr
4Q ,

k
Tr k
Q (1/2

)

=

Q
Tr 1/2

by assumption, and



(48)

.

 1/4, due to

 1/2 and Tr  Q (since we

We proceed with upper bounding P [Ng  ng ] in (42). Recall that Ng is the number of times item i has been recommended
to one of the (1
)k good neighbors in Nu .
We will only consider the Tr random items recommended to each user; this yields an upper bound on P [Ng  ng ]. Recall
that those items are chosen from the Q items in Q, and that, by assumption, of the k neighbors at least (1
)k are good.
By Bernstein’s inequality,

(1
)k Tr k
P [Ng  ng ] = P Ng  Tr
Q
2Q
e

1

Tr k( 1 )2 /2
2Q
1
(1
)+ 1 1
Q
Q
3 2Q

e

1

Tr k( 1 )2 /2
2Q
1
(1
)+ 1 1
Q
Q
3 2Q

e

Tr k 1
8Q
1+1/6

e

Application of inequalities (47) and (49) to inequality (42) together with a union bound yields
✓
◆
Tr kpf 2
Tr k
Q64
10Q
P [p̂ui  1/2, for one or more i 2 Q]  Q e
+e
 2Qe
where we used that pf

2

 1. By (26), the RHS above is smaller than

0

Tr k
10Q

(49)

.

Tr kpf 2
Q64

,

(50)

. This concludes the proof.

7. Proof of Proposition 1
Consider a set of users with K user types that are non-overlapping in their preferences, specifically, consider a set of users
where every user u belonging to the k-th user type has preference vector
(
1, if i 2 [k(M 1)/K, . . . , kM/K]
[pu ]i =
0, otherwise.
Consider a given user u. At time T , the expected number of ratings obtained by u is upper bounded by p2f . Thus, for
all T  p2 in at least a fraction of the runs of the algorithm, the algorithm has no information on the user u, and the
f
best it can do is to recommend a random item. For our choice of preference vectors, with probability at most 1/K, it will
recommend a likable item. Therefore, an upper bound on the expected regret is given by ( + 1/K)N T .

1705
1706
1707
1708
1709
1710
1711
1712
1713
1714
1715
1716
1717
1718
1719
1720
1721
1722
1723
1724
1725
1726
1727
1728
1729
1730
1731
1732
1733
1734
1735
1736
1737
1738
1739
1740
1741
1742
1743
1744
1745
1746
1747
1748
1749
1750
1751
1752
1753
1754
1755
1756
1757
1758
1759

