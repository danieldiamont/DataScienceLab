Identify the Nash Equilibrium in Static Games with Random Payoffs

A. Proof of Lemma 2
The proof of Lemma 2 relies on the folloing lemma:
Lemma 7. For positive measurable functions fi , we have:
Z Y
K Y
K
K Z
â‰¤
fiK (x)dx.
fi (x)dx
i=1

(4)

i=1

Proof. By Cauchy-Schwarz inequality, Eq. (4) is correct for K = 2. We use mathematical induction to prove that it still
holds for K > 2. Specifically, assume InEq. (4) is true for K âˆ’ 1, considering case K, by Holderâ€™s inequality we have:
K
Z Y
K  Z
Kâˆ’1
K
Y
fK (x)
=
fi (x)dx
fi (x)dx
i=1

i=1

â‰¤

 Z

 K1  Z

K
fK
(x)dx

(

Kâˆ’1
Y

fi (x))

K
Kâˆ’1

dx

K
 Kâˆ’1
K

i=1

=

Z

 Z

K
fK
(x)dx

(

Kâˆ’1
Y

K

fi (x)) Kâˆ’1 dx

Kâˆ’1

i=1

â‰¤

K Z
Y

fiK (x)dx.

i=1

Now we present the proof of Lemma 2.
Proof. With straight-forward computations, we have:
K Z
K
X
X
Pk (Ïˆ = k) =
k=1

k=1

dPk =

Ïˆ=k

K Z
X
k=1

Ïˆ=k

dPk
dP1 .
dP1

Because we need a bound for any measurable function Ïˆ, we need to construct the Ïˆ that minimizes the last expression.
k
so that
Obviously, the last expression is minimized for Ïˆ(x) = arg minkâ‰¤K dP
dP1 (x),
Z
Z
K
X
dPk
Pk (Ïˆ = k) â‰¥ dP1 min
= min dPk .
k dP1
k
k=1

For vector PÌ„ = {dP1 , Â· Â· Â· , dPK }, define ri (PÌ„ ) be the i-th smallest value in PÌ„ , we have
Z
K  Z Y
K Y Z
Z Y
YZ
1
1
=
( rk (PÌ„ )) K
â‰¤
rk (PÌ„ ) = min dPk
rk (PÌ„ ).
( dPk ) K
k

k

k

k

kâ‰¥2

K
The above inequality is proven by Lemma 7.Note that k dPk â‰¤ K, so kâ‰¥2 rk (PÌ„ ) â‰¤ ( Kâˆ’1
)Kâˆ’1 < e. With
Jensenâ€™s inequality, it yields that:
Z Y
K
K
X
1
1
Pk (Ïˆ = k) â‰¥
( dPk ) K
e
k=1
k


Z Y
1
1
K
= exp K log ( dPk )
e
k


Z Y
1
dPk 1
= exp K log (
) K dP1
e
dP1
k
XZ

1
dPk
â‰¥ exp
dP1 log
e
dP1
k
 X

K
1
= exp âˆ’
KL(P1 , Pk ) .
e

P R

Q

k=2

R

Identify the Nash Equilibrium in Static Games with Random Payoffs

B. Proof of Lemma 3
Proof. With Hoeffdingâ€™s inequality and InEq. (2) in the main text, we have
ï£«
ï£«
ï£¶
ï£¶
u0i
u0i
X
X
X
1
1
Y s âˆ’ Âµs > Î²(ui , ti )ï£¸ â‰¤
Pï£­ 0
Y s âˆ’ Âµs > Î²(ui , ti )ï£¸
P ï£­i : 0
ui i=1 i
ui i=1 i
iâ‰¥1
X
	

exp âˆ’2u0i Î²(ui , ti )2
â‰¤
iâ‰¥1

â‰¤

X


	
exp âˆ’2ui Î²(ui , ti )2

iâ‰¥1

â‰¤

Î´
.
2K

Then, applying the union bound, we complete the proof.

C. Proof of Lemma 4
In this section, we are going to show that E[Î³ âˆ’ T (tÎ³ )] â‰¤ O(Hc (j) log Î³) to complete the proof of Lemma 4. The proof is
the same as that of Theorem 1 in (Auer et al., 2002), except some constants.
Proof. For simplicity, let s1 denote sâˆ—c (j). Considering s : Âµs < Âµs1 , let ev(s, Î³) be the event that s is pulled at line 22 by
Alg. 1 at round Î³. Let Ts (tÎ³ ) denote the number of pulls on arm s in line 22 Alg. 1 when Alg. 1 selects column j for the
Î³-th time. Then, E[Ts (tÎ³ )] can be bounded as follows:
E [Ts (tÎ³ )] =

Î³
X

1[The algorithm pulls arm s in line 22 when Alg. 1 selects column j for the Î³-th round ]

Î³ 0 =1
Î³
X

â‰¤l+

1 Ts (t0Î³ âˆ’ 1) â‰¥ l, ev(s, Î³ 0 )




Î³ 0 =1
Î³
X

#
s
0
log
t
log
Î³
â‰¤l+
1 Ts (t0Î³ âˆ’ 1) â‰¥ l, ÂµÌ„s1 + 2
â‰¤ ÂµÌ„s + 2
Ts1 (t0Î³ âˆ’ 1)
Ts (t0Î³ âˆ’ 1)
0
Î³ =1
s
s
"
#
Î³
X
log
Î³
log Î³
0
â‰¤l+
1 Ts (tÎ³ âˆ’ 1) â‰¥ l, min0 ÂµÌ„s1 + 2
â‰¤ max ÂµÌ„s + 2
Î³1
Î³2
Î³1 âˆˆ[1,Î³ âˆ’1]
Î³2 âˆˆ[l,Î³âˆ’1]
Î³ 0 =1
s
s
"
#
Î³ Î³âˆ’1
X
X Î³âˆ’1
X
log Î³ 0
log Î³ 0
â‰¤l+
1 ÂµÌ„s1 + 2
â‰¤ ÂµÌ„s + 2
.
Î³1
Î³2
0
Î³ =0
Î³ =1

Since ÂµÌ„s1

"

1

s

Î³2 =l

q
q
0
0
+ 2 logÎ³1Î³ â‰¤ ÂµÌ„s + 2 logÎ³2Î³ , at least one of the following three events happens:

â€¢ ÂµÌ„s1 â‰¤ Âµs1 âˆ’
â€¢ ÂµÌ„s â‰¤ Âµs âˆ’

q
0
2 logÎ³1Î³ ;

q

â€¢ Âµs1 â‰¤ Âµs + 2

0

2 logÎ³2Î³ ;

q
0
2 logÎ³2Î³ .

0âˆ’4
By Hoeffdingâ€™s inequality, the probability that the first and the second eventshappen is at most
 2Î³ , and for l â‰¥
8
1
(Âµs âˆ’Âµs1 )2 log Î³, the third event will not happen. So we have E[Ts (tÎ³ )] = O (Âµs âˆ’Âµs1 )2 log Î³ . Then, with straightforward computations we complete the proof.

Identify the Nash Equilibrium in Static Games with Random Payoffs

D. Proof of Lemma 5
Proof. Suppose sâˆ— 6= none. If at round Î³, Alg.1 does not select Rsâˆ— [1] or Csâˆ— [2] , then at least one of following events
happens:
â€¢ âˆƒs âˆˆ
/ {none, sâˆ— }, s = N E(MÌ„t );
â€¢ N E(MÌ„t ) = none.
ForPthe first part, itPis easy to see that s 6= sâˆ—r (s[1]) or s 6= sâˆ—c (s[2]). So by Lemma 4, the size of this part is at most
2( i Î›(Hr (i)) + j Î»(Hc (j))).
Similarly, if the second case happens, then sâˆ— 6= arg mins0 âˆˆrow(sâˆ— ) ÂµÌ„s0 or sâˆ— 6= arg maxs0 âˆˆcol(sâˆ— ) ÂµÌ„s0 . When the second
case happens for the Î³-th round, due to Alg.1, we selected Rsâˆ— [1] for at least bÎ³/mc times and Csâˆ— [2] for at least bÎ³/nc
times. So by Lemma 4, the size of the second part is at most d(m + n)(Î›(Hr (sâˆ— [1])) + Î›(Hc (sâˆ— [2])))e.

E. Proof of Lemma 6
This proof is the same as the proof of Theorem 6 in Kalyanakrishnan et al. (2012), except the statement and some constants.
Proof. Without loss of generality, consider a bandit model v =
P{s1 , Â· Â· Â· ,1sk }. Suppose Âµsi > Âµsi+1 . At each round, we
pull arms in v as from line 21 to line 23 in Alg. 1. Let H = i=2 (Âµs âˆ’Âµ
2 . Let s1 (Î³) = arg maxsâˆˆv ÂµÌ„s after round
si )
1
Î³, and s2 (Î³) = arg maxsâˆˆv\s1 (Î³) U (s, |Ts (Ï„ )|, |Ï„ |). Denote Ï„ (Î³) be the set of time steps t in the first Î³ round. If after Î³v
round, we have L(s1 (Î³), |Ts1 (Î³) (Ï„ )|, |Ï„ |) > U (s2 (Î³), |Ts2 (Î³) (Ï„ )|, |Ï„ |), we now show that EÎ³v = O(Hv log HÎ´v ).
Now let us introduce some notations. Define c =

Âµs1 +Âµs2
2

âˆ†i :=

and

ï£±
ï£²Âµs1 âˆ’ Âµs2

i = 1,

ï£³Âµs1 âˆ’ Âµsi

iâ‰¥2

During round Î³, we partition the set of arms into three subsets:
â€¢ AboveÎ³ := {s âˆˆ v : ÂµÌ„s âˆ’ Î²(Ts (Î³), Î³) > c}.
â€¢ BelowÎ³ := {s âˆˆ v : ÂµÌ„s + Î²(Ts (Î³), Î³) < c}.
â€¢ M iddleÎ³ := v\(AboveÎ³ âˆª BelowÎ³ ).
And by Lemma 2 in Kalyanakrishnan et al. (2012), if we cannot identify arg maxsâˆˆv Âµ(s) after round Î³, then s1 (Î³) âˆˆ
M iddleÎ³ or s2 (Î³) âˆˆ M iddleÎ³ . And with similar computation to Lemma 4 in Kalyanakrishnan et al. (2012), if for all arm
4
3Î´Hv
1
/ M iddleÎ³ with probability at least 1 âˆ’ mnÎ³
ln mnÎ³
si , we pulled at least 4d 2âˆ†
4 . The rest is all the
4Î´ e times, then âˆ€s, s âˆˆ
i
same as Theorem 6 in Kalyanakrishnan et al. (2012).

F. Proof of Theorem 5
Proof. With the same argument as Theorem 8 in Even-Dar et al. (2006), for s1 , s2 , suppose Âµs1 âˆ’ Âµs2 = âˆ† > 0. Then
with probability at least 1 âˆ’ Î´/(mn), after round Î³ = O( ln(mn/Î´âˆ†)
), we have ÂµÌ„s1 âˆ’ ÂµÌ„s2 > 2Î²1 (Î³). So by the union bound,
âˆ†2
the racing algorithm stops after finite time with probability at least 1 âˆ’ Î´.
Then we show that Alg. 2 is Î´-PAC.
According to Lemma 3, the probability that there is an arm s such that |ÂµÌ„s âˆ’ Âµs | > Î²1 (Î³) for some Î³ is at most Î´. Suppose
âˆ€s, Î³, |ÂµÌ„s âˆ’ Âµs | > Î²1 (Î³).

Identify the Nash Equilibrium in Static Games with Random Payoffs

For the case N E(M) = none, consider arm s. If s âˆˆ
/ {sâˆ—r (s[1]), sâˆ—c (s[2])}, clearly, it will be eliminated when its confidence
bounds are disjoint with the confidence bounds of sâˆ—r (s[1]) and sâˆ—c (s[2]). Otherwise, if s âˆˆ {sâˆ—r (s[1]), sâˆ—c (s[2])}, without
loss of generality, suppose s = sâˆ—r (s[1]). Obviously, there is a sequence S = {s1 , s2 , Â· Â· Â· , s2k } such that (1) s = s1 ;
(2) s2i+1 = sâˆ—r (s2i+1 [1]) and s2i = sâˆ—c (s2i [2]) for all i, where sj = s(jâˆ’1)%(2k)+1 ; (3) s2i+1 âˆˆ col(s2i ) and s2i+2 âˆˆ
row(s2i+1 ). And according to Alg.2, all the arms in S will be eliminated when their confidence bounds are disjoint.
For the case sâˆ— = N E(M) 6= none, obviously, it wonâ€™t be eliminated by our elimination rule, so Algorithm is Î´-PAC.
Up to now we have proven the two statements about Alg. 2 in Theorem 5.

G. Correctness of baseline
Here, We present the stopping and recommendation rules of our baseline algorithm in detail.
p
Stopping and recommendation rules: In each round, we pull all arms. Let Î²2 (Î³) = log(5mnÎ³ 2 /4Î´)/Î³. After the t-th
round, if one of the following event happens, the algorithm stops:
â€¢ For some arm s, if for all s0 âˆˆ row(s)\s, âˆƒÎ³s0 , after Î³s0 rounds, ÂµÌ„s + 2Î²2 (Î³s0 , Î´) â‰¤ ÂµÌ„s0 and for all s0 âˆˆ
col(s)\s, âˆƒÎ³(s0 ), after Î³s0 rounds, ÂµÌ„s â‰¥ ÂµÌ„s0 + 2Î²2 (Î³s0 , Î´), then the recommendation rule recommends s as the
NE.
â€¢ For all arm s, if âˆƒs0 âˆˆ row(s), ÂµÌ„s0 + Î²2 (t, Î´) â‰¤ ÂµÌ„s âˆ’ Î²2 (t, Î´) or âˆƒs0 âˆˆ col(s), ÂµÌ„s0 âˆ’ Î²2 (t, Î´) â‰¥ ÂµÌ„s + Î²2 (t, Î´), then
the recommendation rule determines that the underlying game does not have a NE.
Obviously, this algorithm is Î´-PAC and the proof for this statement is the same as the proof for Theorem 5.

